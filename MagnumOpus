local Config = {
    WindowName = "Magnum Opus Premium - By Seos#2001",
	Color = Color3.fromRGB(244,180,80),
	Keybind = Enum.KeyCode.RightControl
}
game:GetService("Players").LocalPlayer.Idled:connect(function()
game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)

local Name = "Magnum Opum.json"

Des = {}
if makefolder then
    makefolder("MagnumLoader")
end

local Settings

if
    not pcall(
        function()
            readfile("MagnumLoader//" .. Name)
        end
    )
 then
    writefile("MagnumLoader//" .. Name, game:GetService("HttpService"):JSONEncode(Des))
end

Settings = game:GetService("HttpService"):JSONDecode(readfile("MagnumLoader//" .. Name))

local function Save()
    writefile("MagnumLoader//" .. Name, game:GetService("HttpService"):JSONEncode(Settings))
end

local function Teleport(A, B)
    local TPBypass
    for i, v in pairs(A) do
        if v.Name == "MotionTracker" then
            TPBypass = v
        end
    end
    for i, v in pairs(debug.getupvalues(require(TPBypass))) do
        if type(v) == "function" then
            if getinfo(v).name == "TeleportTo" then
                setupvalue(v, 3, B)
            end
        end
    end
    return A, B, nil, nil
end
Models = getloadedmodules()
local function getNearestExplorer()
    local TargetDistance = math.huge
    local Target
   for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
        if v.Name == "ExplorerCapsule" then 
            local Mag =
                (game:GetService("Workspace").Terrain[game.Players.LocalPlayer.Name].Position -
                v.Position).Magnitude
            if Mag < TargetDistance then
                TargetDistance = Mag
                Target = v
            end
        end
    end
    return Target
end


local function getNearestGalaxyExplorer()
    local TargetDistance = math.huge
    local Target
   for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
        if v.Name == "GalaxyExplorerCapsule" then 
            local Mag =
                (game:GetService("Workspace").Terrain[game.Players.LocalPlayer.Name].Position -
                v.Position).Magnitude
            if Mag < TargetDistance then
                TargetDistance = Mag
                Target = v
            end
        end
    end
    return Target
end

local function getNearestMecha()
    local TargetDistance = math.huge
    local Target
   for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
        if v.Name == "MechaCapsule" then 
            local Mag =
                (game:GetService("Workspace").Terrain[game.Players.LocalPlayer.Name].Position -
                v.Position).Magnitude
            if Mag < TargetDistance then
                TargetDistance = Mag
                Target = v
            end
        end
    end
    return Target
end

local function getNearestMonster()
    local TargetDistance = math.huge
    local Target
   for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
        if v.Name == "MonsterCapsule" then 
            local Mag =
                (game:GetService("Workspace").Terrain[game.Players.LocalPlayer.Name].Position -
                v.Position).Magnitude
            if Mag < TargetDistance then
                TargetDistance = Mag
                Target = v
            end
        end
    end
    return Target
end

local curpname = game.Players.LocalPlayer.Name


wait()
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Astr0h/Non/main/MainFrame"))()
local Window = Library:CreateWindow(Config, game:GetService("CoreGui"))

local Tab1 = Window:CreateTab("Token Autofarm")
local Tab2 = Window:CreateTab("UI Settings")

local Section1 = Tab1:CreateSection("")
local Section3 = Tab2:CreateSection("Menu")
local Section4 = Tab2:CreateSection("Background")

Section1:CreateLabel("Welcome, "..curpname..",")
Section1:CreateLabel("Thank you for purchasing")
Section1:CreateLabel("Press F9 to view your current Tokens")
Section1:CreateLabel("Current Season: "..game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("HUD").Minimap.Season.Text..".")

local Toggle3 = Section3:CreateToggle("UI Toggle", nil, function(State)
local cap1 = game:GetService("Players").LocalPlayer.Data.Items.ExplorerGachaToken
cap1.Changed:Connect(function(newValue)
warn ("Photovore Token received! Current amount:"..(newValue).."!")
end)

local cap2 = game:GetService("Players").LocalPlayer.Data.Items.GalaxyExplorerGachaToken
cap2.Changed:Connect(function(newValue)
warn ("Galaxy Token received! Current amount:"..(newValue).."!")
end)

local cap3 = game:GetService("Players").LocalPlayer.Data.Items.MutateExplorerGachaToken
cap3.Changed:Connect(function(newValue)
warn ("Mecha Token received! Current amount:"..(newValue).."!")
end)

local cap4 = game:GetService("Players").LocalPlayer.Data.Items.MonsterExplorerGachaToken
cap4.Changed:Connect(function(newValue)
warn ("Monster Token received! Current amount: "..(newValue).."!")
end)

warn ("Welcome to Magnum Opum")
warn ("Photovore Tokens: "..(cap1).Value.."!")
warn ("Galaxy Tokens: "..(cap2).Value.."!")
warn ("Mecha Tokens: "..(cap3).Value.."!")
warn ("Monster Tokens: "..(cap4).Value.."!")

local Toggle1 = Section1:CreateToggle("Auto Map", Settings.AutoAttack, function(State)
Settings.AutoAttack = State
spawn(function()
while Settings.AutoAttack do
    wait(15)
    pcall(
        function()
game:GetService("Workspace"):WaitForChild("Regions")
for i,v in pairs(game:GetService("Workspace").Regions:GetChildren()) do
    if v:IsA("BasePart") then 
        Teleport(Models,CFrame.new(v.Position - Vector3.new(0,-500,0))) wait(0.5)
        Teleport(Models,CFrame.new(Vector3.new(0,500,0)))
	game:GetService("Players").LocalPlayer.RemoteEvent:FireServer("drink",workspace.Water)
    end
end 
end)
end
end)
end)


local Toggle1 = Section1:CreateToggle("Get Explorer Capsule", Settings.AutoAttack, function(State)
Settings.AutoAttack = State
spawn(function()
while Settings.AutoAttack do
    wait()
    pcall(
        function()
             Teleport(Models, getNearestExplorer().CFrame)
             wait (1)
             Teleport(Models, getNearestExplorer().CFrame)
game:GetService("Players").LocalPlayer.RemoteEvent:FireServer("drink",workspace.Water)
  
        end)
end
end)
end)

local Toggle1 = Section1:CreateToggle("Get Galaxy Explorer", Settings.AutoAttack, function(State)
Settings.AutoAttack = State
spawn(function()
while Settings.AutoAttack do
    wait()
    pcall(
        function()
             Teleport(Models, getNearestGalaxyExplorer().CFrame)
             wait (1)
             Teleport(Models, getNearestGalaxyExplorer().CFrame)
	   game:GetService("Players").LocalPlayer.RemoteEvent:FireServer("drink",workspace.Water)
        end)
end
end)
end)

local Toggle1 = Section1:CreateToggle("Get Mecha Capsule", Settings.AutoAttack, function(State)
Settings.AutoAttack = State
spawn(function()
while Settings.AutoAttack do
    wait()
    pcall(
        function()
             Teleport(Models, getNearestMecha().CFrame)
             wait (1)
             Teleport(Models, getNearestMecha().CFrame)
	   game:GetService("Players").LocalPlayer.RemoteEvent:FireServer("drink",workspace.Water)
  end)
end
end)
end)

local Toggle1 = Section1:CreateToggle("Get Monster Capsule", Settings.AutoAttack, function(State)
Settings.AutoAttack = State
spawn(function()
while Settings.AutoAttack do
    wait()
    pcall(
        function()
             Teleport(Models, getNearestMonster().CFrame)
             wait (1)
             Teleport(Models, getNearestMonster().CFrame)
	   game:GetService("Players").LocalPlayer.RemoteEvent:FireServer("drink",workspace.Water)
  end)
end
end)
end)

local args = {
    [1] = "spawn",
    [2] = {
        ["Info"] = {},
        ["DinoType"] = "Kiiwin"
    }
}


game:GetService("Players").LocalPlayer:WaitForChild("RemoteEvent"):FireServer(unpack(args))

local Button1 = Section1:CreateButton("Server Hop", function()
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
local File = pcall(function()
    AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
end)
if not File then
    table.insert(AllIDs, actualHour)
    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
end
function TPReturner()
    local Site;
    if foundAnything == "" then
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end
    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end
    local num = 0;
    for i,v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _,Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile = pcall(function()
                            delfile("NotSameServers.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
                num = num + 1
            end
            if Possible == true then
                table.insert(AllIDs, ID)
                wait()
                pcall(function()
                    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                    wait()
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                end)
                wait(4)
            end
        end
    end
end

function Teleport()
    while wait() do
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end

-- If you'd like to use a script before server hopping (Like a Automatic Chest collector you can put the Teleport() after it collected everything.
Teleport()
end)

	local Toggle3 = Section3:CreateToggle("UI Toggle", nil, function(State)
	Window:Toggle(State)
end)
Toggle3:CreateKeybind(tostring(Config.Keybind):gsub("Enum.KeyCode.", ""), function(Key)
	Config.Keybind = Enum.KeyCode[Key]
end)
end)

Toggle3:SetState(true)
Section3:CreateLabel("Credits Seos#2001")
Section3:CreateLabel("Credits AlexR32#3232 Ui")
Section3:CreateLabel("If you have issues DM me on Discord")
local Colorpicker3 = Section3:CreateColorpicker("UI Color", function(Color)
	Window:ChangeColor(Color)
end)
Colorpicker3:UpdateColor(Config.Color)

-- credits to jan for patterns
local Dropdown3 = Section4:CreateDropdown("Image", {"Default"}, function(Name)
	if Name == "Default" then
		Window:SetBackground("13281813863")
	end
end)
Dropdown3:SetOption("Default")

local Colorpicker4 = Section4:CreateColorpicker("Color", function(Color)
	Window:SetBackgroundColor(Color)
end)
Colorpicker4:UpdateColor(Color3.new(100,100,100))

local Slider3 = Section4:CreateSlider("Transparency",0,1,nil,false, function(Value)
	Window:SetBackgroundTransparency(Value)
end)
Slider3:SetValue(0)

local Slider4 = Section4:CreateSlider("Tile Scale",0,1,nil,false, function(Value)
	Window:SetTileScale(Value)
end)
Slider4:SetValue(1)
spawn(function()
while wait() do
Save()
end end)
